name: Release Forta Unverified Contract Bot

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'format input like this: forta-unverified-contract-bot-v0.0.0'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/zenchain-protocol/forta-unverified-contract-bot

jobs:
  build-and-push-bot-image:
    if: startsWith(github.event.release.tag_name, 'forta-unverified-contract-bot') || github.event_name == 'workflow_dispatch' && startsWith(github.event.inputs.tag, 'forta-unverified-contract-bot')
    runs-on: Zenchain-8core
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse version number
        id: parse_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAG=${{ github.event.inputs.tag }}
          else
            TAG=${{ github.event.release.tag_name }}
          fi
          VERSION=$(echo $TAG | sed -e 's/.*-v//')
          echo "::set-output name=version::$VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./unverified-contract-py
          file: ./unverified-contract-py/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:v${{ steps.parse_version.outputs.version }}
          build-args: |
            CHAIN_ID=${{ secrets.CHAIN_ID }}
            EVM_RPC=${{ secrets.EVM_RPC }}
            STORAGE_API_URL=${{ secrets.STORAGE_API_URL }}
            NODE_ENV=production